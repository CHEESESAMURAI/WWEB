#!/usr/bin/env python3
"""
–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –≤—Å–µ—Ö —Ñ—É–Ω–∫—Ü–∏–π MPSTATS —Å –±—Ä–∞—É–∑–µ—Ä–Ω—ã–º –ø–æ–¥—Ö–æ–¥–æ–º
"""
import asyncio
from mpstats_browser_utils import (
    get_category_data_browser,
    get_item_sales_browser,
    get_item_info_browser,
    get_seasonality_annual_browser,
    get_seasonality_weekly_browser,
    search_products_browser,
    get_date_range_30_days,
    get_date_range_month
)

async def test_all_mpstats_functions():
    """–¢–µ—Å—Ç–∏—Ä—É–µ–º –≤—Å–µ —Ñ—É–Ω–∫—Ü–∏–∏ MPSTATS —Å –±—Ä–∞—É–∑–µ—Ä–Ω—ã–º –ø–æ–¥—Ö–æ–¥–æ–º"""
    
    print("üåê –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –≤—Å–µ—Ö —Ñ—É–Ω–∫—Ü–∏–π MPSTATS —Å –±—Ä–∞—É–∑–µ—Ä–Ω—ã–º –ø–æ–¥—Ö–æ–¥–æ–º...")
    print("=" * 70)
    
    # –ü–æ–ª—É—á–∞–µ–º –¥–∏–∞–ø–∞–∑–æ–Ω –¥–∞—Ç
    start_date, end_date = get_date_range_30_days()
    print(f"üìÖ –î–∏–∞–ø–∞–∑–æ–Ω –¥–∞—Ç: {start_date} - {end_date}")
    print()
    
    # –¢–µ—Å—Ç 1: –î–∞–Ω–Ω—ã–µ –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
    print("üß™ –¢–µ—Å—Ç 1: –ü–æ–ª—É—á–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏")
    try:
        category_data = await get_category_data_browser("–≠–ª–µ–∫—Ç—Ä–æ–Ω–∏–∫–∞", start_date, end_date)
        if category_data and category_data.get('data'):
            print(f"‚úÖ –£—Å–ø–µ—Ö! –¢–æ–≤–∞—Ä–æ–≤ –≤ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏: {len(category_data['data'])}")
            print(f"–ü—Ä–∏–º–µ—Ä —Ç–æ–≤–∞—Ä–∞: {category_data['data'][0].get('name', 'N/A')[:50]}...")
        else:
            print("‚ùå –î–∞–Ω–Ω—ã–µ –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –Ω–µ –ø–æ–ª—É—á–µ–Ω—ã")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
    
    print("-" * 70)
    
    # –¢–µ—Å—Ç 2: –î–∞–Ω–Ω—ã–µ –ø—Ä–æ–¥–∞–∂ —Ç–æ–≤–∞—Ä–∞
    print("\nüß™ –¢–µ—Å—Ç 2: –î–∞–Ω–Ω—ã–µ –ø—Ä–æ–¥–∞–∂ —Ç–æ–≤–∞—Ä–∞")
    test_article = "13738266"  # –ü—Ä–∏–º–µ—Ä –∞—Ä—Ç–∏–∫—É–ª–∞ –∏–∑ –ø—Ä–µ–¥—ã–¥—É—â–∏—Ö —Ç–µ—Å—Ç–æ–≤
    try:
        sales_data = await get_item_sales_browser(test_article, start_date, end_date)
        if sales_data:
            print(f"‚úÖ –£—Å–ø–µ—Ö! –ü–æ–ª—É—á–µ–Ω—ã –¥–∞–Ω–Ω—ã–µ –ø—Ä–æ–¥–∞–∂ –¥–ª—è –∞—Ä—Ç–∏–∫—É–ª–∞ {test_article}")
            print(f"–°—Ç—Ä—É–∫—Ç—É—Ä–∞ –¥–∞–Ω–Ω—ã—Ö: {list(sales_data.keys()) if isinstance(sales_data, dict) else type(sales_data)}")
        else:
            print(f"‚ùå –î–∞–Ω–Ω—ã–µ –ø—Ä–æ–¥–∞–∂ –¥–ª—è –∞—Ä—Ç–∏–∫—É–ª–∞ {test_article} –Ω–µ –ø–æ–ª—É—á–µ–Ω—ã")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
    
    print("-" * 70)
    
    # –¢–µ—Å—Ç 3: –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Ç–æ–≤–∞—Ä–µ
    print("\nüß™ –¢–µ—Å—Ç 3: –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Ç–æ–≤–∞—Ä–µ")
    try:
        item_info = await get_item_info_browser(test_article)
        if item_info:
            print(f"‚úÖ –£—Å–ø–µ—Ö! –ü–æ–ª—É—á–µ–Ω–∞ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Ç–æ–≤–∞—Ä–µ {test_article}")
            print(f"–°—Ç—Ä—É–∫—Ç—É—Ä–∞ –¥–∞–Ω–Ω—ã—Ö: {list(item_info.keys()) if isinstance(item_info, dict) else type(item_info)}")
        else:
            print(f"‚ùå –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Ç–æ–≤–∞—Ä–µ {test_article} –Ω–µ –ø–æ–ª—É—á–µ–Ω–∞")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
    
    print("-" * 70)
    
    # –¢–µ—Å—Ç 4: –°–µ–∑–æ–Ω–Ω–æ—Å—Ç—å (–≥–æ–¥–æ–≤–∞—è)
    print("\nüß™ –¢–µ—Å—Ç 4: –ì–æ–¥–æ–≤–∞—è —Å–µ–∑–æ–Ω–Ω–æ—Å—Ç—å")
    try:
        annual_data = await get_seasonality_annual_browser("–≠–ª–µ–∫—Ç—Ä–æ–Ω–∏–∫–∞")
        if annual_data:
            print("‚úÖ –£—Å–ø–µ—Ö! –ü–æ–ª—É—á–µ–Ω—ã –¥–∞–Ω–Ω—ã–µ –≥–æ–¥–æ–≤–æ–π —Å–µ–∑–æ–Ω–Ω–æ—Å—Ç–∏")
            print(f"–¢–∏–ø –¥–∞–Ω–Ω—ã—Ö: {type(annual_data)}")
            if isinstance(annual_data, list):
                print(f"–≠–ª–µ–º–µ–Ω—Ç–æ–≤: {len(annual_data)}")
            elif isinstance(annual_data, dict):
                print(f"–ö–ª—é—á–∏: {list(annual_data.keys())}")
        else:
            print("‚ùå –î–∞–Ω–Ω—ã–µ –≥–æ–¥–æ–≤–æ–π —Å–µ–∑–æ–Ω–Ω–æ—Å—Ç–∏ –Ω–µ –ø–æ–ª—É—á–µ–Ω—ã")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
    
    print("-" * 70)
    
    # –¢–µ—Å—Ç 5: –°–µ–∑–æ–Ω–Ω–æ—Å—Ç—å (–Ω–µ–¥–µ–ª—å–Ω–∞—è)
    print("\nüß™ –¢–µ—Å—Ç 5: –ù–µ–¥–µ–ª—å–Ω–∞—è —Å–µ–∑–æ–Ω–Ω–æ—Å—Ç—å")
    try:
        weekly_data = await get_seasonality_weekly_browser("–≠–ª–µ–∫—Ç—Ä–æ–Ω–∏–∫–∞")
        if weekly_data:
            print("‚úÖ –£—Å–ø–µ—Ö! –ü–æ–ª—É—á–µ–Ω—ã –¥–∞–Ω–Ω—ã–µ –Ω–µ–¥–µ–ª—å–Ω–æ–π —Å–µ–∑–æ–Ω–Ω–æ—Å—Ç–∏")
            print(f"–¢–∏–ø –¥–∞–Ω–Ω—ã—Ö: {type(weekly_data)}")
            if isinstance(weekly_data, list):
                print(f"–≠–ª–µ–º–µ–Ω—Ç–æ–≤: {len(weekly_data)}")
            elif isinstance(weekly_data, dict):
                print(f"–ö–ª—é—á–∏: {list(weekly_data.keys())}")
        else:
            print("‚ùå –î–∞–Ω–Ω—ã–µ –Ω–µ–¥–µ–ª—å–Ω–æ–π —Å–µ–∑–æ–Ω–Ω–æ—Å—Ç–∏ –Ω–µ –ø–æ–ª—É—á–µ–Ω—ã")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
    
    print("-" * 70)
    
    # –¢–µ—Å—Ç 6: –ü–æ–∏—Å–∫ —Ç–æ–≤–∞—Ä–æ–≤ (—ç–∫—Å–ø–µ—Ä–∏–º–µ–Ω—Ç–∞–ª—å–Ω—ã–π)
    print("\nüß™ –¢–µ—Å—Ç 6: –ü–æ–∏—Å–∫ —Ç–æ–≤–∞—Ä–æ–≤ –ø–æ –∫–ª—é—á–µ–≤–æ–º—É —Å–ª–æ–≤—É")
    try:
        search_data = await search_products_browser("—Ç–µ–ª–µ—Ñ–æ–Ω", start_date, end_date)
        if search_data:
            print("‚úÖ –£—Å–ø–µ—Ö! –ù–∞–π–¥–µ–Ω—ã —Ç–æ–≤–∞—Ä—ã –ø–æ –ø–æ–∏—Å–∫—É")
            print(f"–°—Ç—Ä—É–∫—Ç—É—Ä–∞ –¥–∞–Ω–Ω—ã—Ö: {list(search_data.keys()) if isinstance(search_data, dict) else type(search_data)}")
        else:
            print("‚ùå –ü–æ–∏—Å–∫ —Ç–æ–≤–∞—Ä–æ–≤ –Ω–µ –¥–∞–ª —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
    
    print("\n" + "=" * 70)
    
    # –¢–µ—Å—Ç –¥–∞—Ç—ã
    print("\nüìÖ –¢–µ—Å—Ç —Ñ—É–Ω–∫—Ü–∏–π –¥–∞—Ç:")
    print(f"–ü–æ—Å–ª–µ–¥–Ω–∏–µ 30 –¥–Ω–µ–π: {get_date_range_30_days()}")
    print(f"–Ø–Ω–≤–∞—Ä—å 2024: {get_date_range_month(2024, 1)}")
    
    print("\n‚úÖ –í—Å–µ —Ç–µ—Å—Ç—ã –∑–∞–≤–µ—Ä—à–µ–Ω—ã!")

if __name__ == "__main__":
    asyncio.run(test_all_mpstats_functions()) 