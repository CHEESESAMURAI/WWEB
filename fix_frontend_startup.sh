#!/bin/bash

echo "üîß –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï –ó–ê–ü–£–°–ö–ê FRONTEND..."

# –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
NC='\033[0m'

log() {
    echo -e "${GREEN}[$(date +'%Y-%m-%d %H:%M:%S')] $1${NC}"
}

cd /opt/wild-analytics || { echo -e "${RED}–î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è –Ω–µ –Ω–∞–π–¥–µ–Ω–∞${NC}"; exit 1; }

log "üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç–µ–∫—É—â–µ–≥–æ —Å—Ç–∞—Ç—É—Å–∞ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤..."
docker ps -a --format "table {{.Names}}\t{{.Status}}\t{{.Ports}}"

log "üõë –û—Å—Ç–∞–Ω–æ–≤–∫–∞ –≤—Å–µ—Ö –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤..."
docker stop $(docker ps -aq) 2>/dev/null || true
docker rm $(docker ps -aq) 2>/dev/null || true

log "üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ backend..."
curl -s http://93.127.214.183:8000/health || echo "Backend –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω"

log "üöÄ –ó–∞–ø—É—Å–∫ backend (–µ—Å–ª–∏ –Ω—É–∂–Ω–æ)..."
if ! docker ps | grep -q wild-backend; then
    log "üîß Backend –Ω–µ –∑–∞–ø—É—â–µ–Ω, –∑–∞–ø—É—Å–∫–∞–µ–º..."
    docker run -d --name wild-backend -p 8000:8000 wild-backend
    
    log "‚è≥ –û–∂–∏–¥–∞–Ω–∏–µ backend (20 —Å–µ–∫)..."
    sleep 20
    
    log "üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ backend..."
    curl -s http://93.127.214.183:8000/health | jq . 2>/dev/null || curl -s http://93.127.214.183:8000/health
else
    log "‚úÖ Backend —É–∂–µ –∑–∞–ø—É—â–µ–Ω"
fi

log "üîß –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏—è frontend –æ–±—Ä–∞–∑–∞..."
if ! docker images | grep -q wild-frontend; then
    log "üì¶ Frontend –æ–±—Ä–∞–∑ –Ω–µ –Ω–∞–π–¥–µ–Ω, —Å–æ–±–∏—Ä–∞–µ–º..."
    
    log "üé® –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ frontend package.json..."
    cat > wild-analytics-web/package.json << 'EOF'
{
  "name": "wild-analytics-web",
  "version": "0.1.0",
  "private": true,
  "dependencies": {
    "@testing-library/jest-dom": "^5.16.4",
    "@testing-library/react": "^13.3.0",
    "@testing-library/user-event": "^13.5.0",
    "@types/jest": "^27.5.2",
    "@types/node": "^16.11.47",
    "@types/react": "^18.0.15",
    "@types/react-dom": "^18.0.6",
    "axios": "^1.4.0",
    "react": "^18.2.0",
    "react-dom": "^18.2.0",
    "react-router-dom": "^6.3.0",
    "react-scripts": "5.0.1",
    "typescript": "^4.7.4",
    "web-vitals": "^2.1.4"
  },
  "scripts": {
    "start": "react-scripts start",
    "build": "react-scripts build",
    "test": "react-scripts test",
    "eject": "react-scripts eject"
  },
  "eslintConfig": {
    "extends": [
      "react-app",
      "react-app/jest"
    ]
  },
  "browserslist": {
    "production": [
      ">0.2%",
      "not dead",
      "not op_mini all"
    ],
    "development": [
      "last 1 chrome version",
      "last 1 firefox version",
      "last 1 safari version"
    ]
  },
  "proxy": "http://93.127.214.183:8000"
}
EOF

    log "üîß –°–æ–∑–¥–∞–Ω–∏–µ —É–ø—Ä–æ—â–µ–Ω–Ω–æ–≥–æ App.tsx..."
    cat > wild-analytics-web/src/App.tsx << 'EOF'
import React, { useState } from 'react';
import './App.css';

interface User {
  id: number;
  email: string;
  name: string;
  balance: number;
  subscription_type: string;
}

interface LoginData {
  email: string;
  password: string;
}

interface RegisterData {
  email: string;
  password: string;
  name: string;
}

const App: React.FC = () => {
  const [isAuthenticated, setIsAuthenticated] = useState(false);
  const [user, setUser] = useState<User | null>(null);
  const [isLogin, setIsLogin] = useState(true);
  const [loading, setLoading] = useState(false);
  const [error, setError] = useState<string>('');

  const [loginData, setLoginData] = useState<LoginData>({
    email: 'test@example.com',
    password: 'password123'
  });

  const [registerData, setRegisterData] = useState<RegisterData>({
    email: '',
    password: '',
    name: ''
  });

  const handleLogin = async (e: React.FormEvent) => {
    e.preventDefault();
    setLoading(true);
    setError('');

    try {
      const response = await fetch('http://93.127.214.183:8000/auth/login', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
        },
        body: JSON.stringify(loginData),
      });

      const data = await response.json();

      if (response.ok && data.success) {
        localStorage.setItem('token', data.access_token);
        setUser(data.user);
        setIsAuthenticated(true);
        setError('');
      } else {
        setError(data.detail || '–û—à–∏–±–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏');
      }
    } catch (err) {
      setError('–û—à–∏–±–∫–∞ —Å–µ—Ç–∏. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ —Å–µ—Ä–≤–µ—Ä—É.');
      console.error('Login error:', err);
    } finally {
      setLoading(false);
    }
  };

  const handleRegister = async (e: React.FormEvent) => {
    e.preventDefault();
    setLoading(true);
    setError('');

    try {
      const response = await fetch('http://93.127.214.183:8000/auth/register', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
        },
        body: JSON.stringify(registerData),
      });

      const data = await response.json();

      if (response.ok && data.success) {
        localStorage.setItem('token', data.access_token);
        setUser(data.user);
        setIsAuthenticated(true);
        setError('');
      } else {
        setError(data.detail || '–û—à–∏–±–∫–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏');
      }
    } catch (err) {
      setError('–û—à–∏–±–∫–∞ —Å–µ—Ç–∏. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ —Å–µ—Ä–≤–µ—Ä—É.');
      console.error('Register error:', err);
    } finally {
      setLoading(false);
    }
  };

  const handleLogout = () => {
    localStorage.removeItem('token');
    setIsAuthenticated(false);
    setUser(null);
  };

  const testBackend = async () => {
    try {
      const response = await fetch('http://93.127.214.183:8000/health');
      const data = await response.json();
      console.log('Backend status:', data);
      alert(`Backend —Å—Ç–∞—Ç—É—Å: ${data.status}\n–í–µ—Ä—Å–∏—è: ${data.version}`);
    } catch (err) {
      console.error('Backend test error:', err);
      alert('Backend –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω!');
    }
  };

  if (isAuthenticated && user) {
    return (
      <div className="App">
        <div className="dashboard">
          <div className="header">
            <h1>üî• Wild Analytics</h1>
            <div className="user-info">
              <span>üë§ {user.name}</span>
              <span>üí∞ {user.balance}‚ÇΩ</span>
              <span>‚≠ê {user.subscription_type}</span>
              <button onClick={handleLogout} className="logout-btn">–í—ã–π—Ç–∏</button>
            </div>
          </div>
          
          <div className="main-content">
            <div className="welcome-card">
              <h2>üéØ –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ Wild Analytics!</h2>
              <p>–°–∏—Å—Ç–µ–º–∞ –∞–Ω–∞–ª–∏—Ç–∏–∫–∏ –º–∞—Ä–∫–µ—Ç–ø–ª–µ–π—Å–æ–≤ –≥–æ—Ç–æ–≤–∞ –∫ —Ä–∞–±–æ—Ç–µ.</p>
              
              <div className="stats-grid">
                <div className="stat-card">
                  <h3>üìä –ê–Ω–∞–ª–∏–∑ —Ç–æ–≤–∞—Ä–æ–≤</h3>
                  <p>–ì–ª—É–±–æ–∫–∏–π –∞–Ω–∞–ª–∏–∑ —Ç–æ–≤–∞—Ä–æ–≤ Wildberries</p>
                  <button className="btn-primary">–ó–∞–ø—É—Å—Ç–∏—Ç—å –∞–Ω–∞–ª–∏–∑</button>
                </div>
                
                <div className="stat-card">
                  <h3>üè∑Ô∏è –ê–Ω–∞–ª–∏–∑ –±—Ä–µ–Ω–¥–æ–≤</h3>
                  <p>–ò—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏–µ –±—Ä–µ–Ω–¥–æ–≤ –∏ –∫–æ–Ω–∫—É—Ä–µ–Ω—Ç–æ–≤</p>
                  <button className="btn-primary">–ê–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å –±—Ä–µ–Ω–¥</button>
                </div>
                
                <div className="stat-card">
                  <h3>üìà –ê–Ω–∞–ª–∏–∑ –∫–∞—Ç–µ–≥–æ—Ä–∏–π</h3>
                  <p>–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º —Ç–æ–≤–∞—Ä–æ–≤</p>
                  <button className="btn-primary">–í—ã–±—Ä–∞—Ç—å –∫–∞—Ç–µ–≥–æ—Ä–∏—é</button>
                </div>
                
                <div className="stat-card">
                  <h3>üåê –ì–ª–æ–±–∞–ª—å–Ω—ã–π –ø–æ–∏—Å–∫</h3>
                  <p>–ü–æ–∏—Å–∫ —Ç–æ–≤–∞—Ä–æ–≤ –ø–æ –≤—Å–µ–º—É –∫–∞—Ç–∞–ª–æ–≥—É</p>
                  <button className="btn-primary">–ù–∞—á–∞—Ç—å –ø–æ–∏—Å–∫</button>
                </div>
              </div>
              
              <div className="test-section">
                <h3>üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ</h3>
                <button onClick={testBackend} className="test-btn">
                  –ü—Ä–æ–≤–µ—Ä–∏—Ç—å Backend
                </button>
              </div>
            </div>
          </div>
        </div>
      </div>
    );
  }

  return (
    <div className="App">
      <div className="auth-container">
        <div className="auth-card">
          <div className="auth-header">
            <h1>üî• Wild Analytics</h1>
            <div className="auth-toggle">
              <button 
                className={isLogin ? 'active' : ''}
                onClick={() => setIsLogin(true)}
              >
                –í—Ö–æ–¥
              </button>
              <button 
                className={!isLogin ? 'active' : ''}
                onClick={() => setIsLogin(false)}
              >
                –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è
              </button>
            </div>
          </div>

          {error && <div className="error-message">{error}</div>}

          {isLogin ? (
            <form onSubmit={handleLogin} className="auth-form">
              <div className="form-group">
                <label>üìß Email</label>
                <input
                  type="email"
                  value={loginData.email}
                  onChange={(e) => setLoginData({...loginData, email: e.target.value})}
                  required
                />
              </div>
              
              <div className="form-group">
                <label>üîë –ü–∞—Ä–æ–ª—å</label>
                <input
                  type="password"
                  value={loginData.password}
                  onChange={(e) => setLoginData({...loginData, password: e.target.value})}
                  required
                />
              </div>
              
              <button type="submit" disabled={loading} className="auth-button">
                {loading ? '‚è≥ –í—Ö–æ–¥–∏–º...' : 'üöÄ –í–æ–π—Ç–∏'}
              </button>
            </form>
          ) : (
            <form onSubmit={handleRegister} className="auth-form">
              <div className="form-group">
                <label>üë§ –ò–º—è</label>
                <input
                  type="text"
                  value={registerData.name}
                  onChange={(e) => setRegisterData({...registerData, name: e.target.value})}
                  required
                />
              </div>
              
              <div className="form-group">
                <label>üìß Email</label>
                <input
                  type="email"
                  value={registerData.email}
                  onChange={(e) => setRegisterData({...registerData, email: e.target.value})}
                  required
                />
              </div>
              
              <div className="form-group">
                <label>üîë –ü–∞—Ä–æ–ª—å</label>
                <input
                  type="password"
                  value={registerData.password}
                  onChange={(e) => setRegisterData({...registerData, password: e.target.value})}
                  required
                />
              </div>
              
              <button type="submit" disabled={loading} className="auth-button">
                {loading ? '‚è≥ –°–æ–∑–¥–∞–µ–º...' : 'üéØ –°–æ–∑–¥–∞—Ç—å –∞–∫–∫–∞—É–Ω—Ç'}
              </button>
            </form>
          )}

          <div className="test-credentials">
            <h4>üß™ –¢–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ:</h4>
            <p>üìß Email: test@example.com</p>
            <p>üîë –ü–∞—Ä–æ–ª—å: password123</p>
            <button onClick={testBackend} className="test-backend-btn">
              –ü—Ä–æ–≤–µ—Ä–∏—Ç—å Backend
            </button>
          </div>
        </div>
      </div>
    </div>
  );
};

export default App;
EOF

    log "üé® –°–æ–∑–¥–∞–Ω–∏–µ —Å–æ–≤—Ä–µ–º–µ–Ω–Ω–æ–≥–æ CSS..."
    cat > wild-analytics-web/src/App.css << 'EOF'
/* –°–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–π –¥–∏–∑–∞–π–Ω Wild Analytics */
* {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
}

body {
  font-family: 'Inter', -apple-system, BlinkMacSystemFont, 'Segoe UI', sans-serif;
  background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
  min-height: 100vh;
  color: white;
}

.App {
  min-height: 100vh;
  display: flex;
  align-items: center;
  justify-content: center;
  padding: 20px;
}

/* –ê—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—è */
.auth-container {
  width: 100%;
  max-width: 400px;
}

.auth-card {
  background: rgba(255, 255, 255, 0.1);
  backdrop-filter: blur(20px);
  border-radius: 20px;
  padding: 40px;
  box-shadow: 0 8px 32px rgba(31, 38, 135, 0.37);
  border: 1px solid rgba(255, 255, 255, 0.18);
}

.auth-header h1 {
  text-align: center;
  font-size: 2rem;
  margin-bottom: 30px;
  background: linear-gradient(135deg, #f093fb 0%, #f5576c 100%);
  -webkit-background-clip: text;
  -webkit-text-fill-color: transparent;
  background-clip: text;
}

.auth-toggle {
  display: flex;
  background: rgba(255, 255, 255, 0.1);
  border-radius: 12px;
  margin-bottom: 30px;
  overflow: hidden;
}

.auth-toggle button {
  flex: 1;
  padding: 12px;
  background: transparent;
  border: none;
  color: rgba(255, 255, 255, 0.7);
  cursor: pointer;
  transition: all 0.3s ease;
}

.auth-toggle button.active {
  background: linear-gradient(135deg, #f093fb 0%, #f5576c 100%);
  color: white;
}

.auth-form {
  display: flex;
  flex-direction: column;
  gap: 20px;
}

.form-group {
  display: flex;
  flex-direction: column;
  gap: 8px;
}

.form-group label {
  font-weight: 600;
  color: rgba(255, 255, 255, 0.9);
}

.form-group input {
  padding: 15px;
  background: rgba(255, 255, 255, 0.1);
  border: 1px solid rgba(255, 255, 255, 0.2);
  border-radius: 12px;
  color: white;
  font-size: 16px;
  transition: all 0.3s ease;
}

.form-group input:focus {
  outline: none;
  background: rgba(255, 255, 255, 0.15);
  border-color: rgba(255, 255, 255, 0.4);
  box-shadow: 0 0 20px rgba(255, 255, 255, 0.1);
}

.form-group input::placeholder {
  color: rgba(255, 255, 255, 0.5);
}

.auth-button {
  background: linear-gradient(135deg, #f093fb 0%, #f5576c 100%);
  border: none;
  border-radius: 12px;
  padding: 15px;
  color: white;
  font-weight: 600;
  font-size: 16px;
  cursor: pointer;
  transition: all 0.3s ease;
  margin-top: 10px;
}

.auth-button:hover:not(:disabled) {
  transform: translateY(-2px);
  box-shadow: 0 8px 25px rgba(245, 87, 108, 0.5);
}

.auth-button:disabled {
  opacity: 0.7;
  cursor: not-allowed;
}

.error-message {
  background: rgba(255, 87, 87, 0.2);
  border: 1px solid rgba(255, 87, 87, 0.3);
  border-radius: 12px;
  padding: 15px;
  color: #ff5757;
  margin-bottom: 20px;
  text-align: center;
}

.test-credentials {
  margin-top: 30px;
  padding: 20px;
  background: rgba(255, 255, 255, 0.05);
  border-radius: 12px;
  text-align: center;
}

.test-credentials h4 {
  margin-bottom: 10px;
  color: #f093fb;
}

.test-credentials p {
  margin: 5px 0;
  color: rgba(255, 255, 255, 0.8);
  font-size: 14px;
}

.test-backend-btn {
  background: rgba(255, 255, 255, 0.1);
  border: 1px solid rgba(255, 255, 255, 0.2);
  border-radius: 8px;
  padding: 8px 16px;
  color: white;
  cursor: pointer;
  transition: all 0.3s ease;
  margin-top: 10px;
  font-size: 14px;
}

.test-backend-btn:hover {
  background: rgba(255, 255, 255, 0.2);
}

/* Dashboard */
.dashboard {
  width: 100%;
  max-width: 1200px;
}

.header {
  display: flex;
  justify-content: space-between;
  align-items: center;
  margin-bottom: 40px;
  padding: 20px;
  background: rgba(255, 255, 255, 0.1);
  backdrop-filter: blur(20px);
  border-radius: 20px;
}

.header h1 {
  font-size: 2.5rem;
  background: linear-gradient(135deg, #f093fb 0%, #f5576c 100%);
  -webkit-background-clip: text;
  -webkit-text-fill-color: transparent;
  background-clip: text;
}

.user-info {
  display: flex;
  align-items: center;
  gap: 20px;
  font-weight: 600;
}

.logout-btn {
  background: rgba(255, 255, 255, 0.1);
  border: 1px solid rgba(255, 255, 255, 0.2);
  border-radius: 8px;
  padding: 8px 16px;
  color: white;
  cursor: pointer;
  transition: all 0.3s ease;
}

.logout-btn:hover {
  background: rgba(255, 255, 255, 0.2);
}

.main-content {
  padding: 20px;
}

.welcome-card {
  background: rgba(255, 255, 255, 0.1);
  backdrop-filter: blur(20px);
  border-radius: 20px;
  padding: 40px;
  box-shadow: 0 8px 32px rgba(31, 38, 135, 0.37);
  border: 1px solid rgba(255, 255, 255, 0.18);
}

.welcome-card h2 {
  text-align: center;
  font-size: 2rem;
  margin-bottom: 20px;
}

.welcome-card p {
  text-align: center;
  color: rgba(255, 255, 255, 0.8);
  margin-bottom: 40px;
  font-size: 1.1rem;
}

.stats-grid {
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
  gap: 20px;
  margin-bottom: 40px;
}

.stat-card {
  background: rgba(255, 255, 255, 0.1);
  border-radius: 15px;
  padding: 25px;
  text-align: center;
  transition: all 0.3s ease;
  border: 1px solid rgba(255, 255, 255, 0.1);
}

.stat-card:hover {
  transform: translateY(-5px);
  box-shadow: 0 12px 40px rgba(31, 38, 135, 0.5);
}

.stat-card h3 {
  font-size: 1.3rem;
  margin-bottom: 10px;
  color: #f093fb;
}

.stat-card p {
  color: rgba(255, 255, 255, 0.7);
  margin-bottom: 20px;
}

.btn-primary {
  background: linear-gradient(135deg, #f093fb 0%, #f5576c 100%);
  border: none;
  border-radius: 10px;
  padding: 12px 24px;
  color: white;
  font-weight: 600;
  cursor: pointer;
  transition: all 0.3s ease;
}

.btn-primary:hover {
  transform: translateY(-2px);
  box-shadow: 0 8px 25px rgba(245, 87, 108, 0.4);
}

.test-section {
  text-align: center;
  padding: 20px;
  background: rgba(255, 255, 255, 0.05);
  border-radius: 15px;
}

.test-section h3 {
  margin-bottom: 15px;
  color: #f093fb;
}

.test-btn {
  background: rgba(102, 126, 234, 0.8);
  border: none;
  border-radius: 10px;
  padding: 12px 24px;
  color: white;
  font-weight: 600;
  cursor: pointer;
  transition: all 0.3s ease;
}

.test-btn:hover {
  background: rgba(102, 126, 234, 1);
  transform: translateY(-2px);
}

/* Responsive */
@media (max-width: 768px) {
  .header {
    flex-direction: column;
    gap: 20px;
    text-align: center;
  }
  
  .user-info {
    flex-wrap: wrap;
    justify-content: center;
  }
  
  .stats-grid {
    grid-template-columns: 1fr;
  }
  
  .auth-card {
    padding: 30px 20px;
  }
}
EOF

    log "üîß –°–æ–∑–¥–∞–Ω–∏–µ —É–ª—É—á—à–µ–Ω–Ω–æ–≥–æ Dockerfile –¥–ª—è frontend..."
    cat > wild-analytics-web/Dockerfile << 'EOF'
FROM node:18-alpine

WORKDIR /app

# –ö–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ package.json
COPY package*.json ./

# –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
RUN npm ci --only=production --silent

# –ö–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ –∏—Å—Ö–æ–¥–Ω–æ–≥–æ –∫–æ–¥–∞
COPY . .

# –°–±–æ—Ä–∫–∞ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
RUN npm run build

# –£—Å—Ç–∞–Ω–æ–≤–∫–∞ serve –¥–ª—è —Ä–∞–∑–¥–∞—á–∏ —Å—Ç–∞—Ç–∏—á–µ—Å–∫–∏—Ö —Ñ–∞–π–ª–æ–≤
RUN npm install -g serve

EXPOSE 3000

# –ö–æ–º–∞–Ω–¥–∞ –∑–∞–ø—É—Å–∫–∞
CMD ["serve", "-s", "build", "-l", "3000"]
EOF

    log "üî® –°–±–æ—Ä–∫–∞ frontend –æ–±—Ä–∞–∑–∞..."
    docker build -t wild-frontend ./wild-analytics-web
    
    if [ $? -ne 0 ]; then
        log "‚ùå –û—à–∏–±–∫–∞ —Å–±–æ—Ä–∫–∏ frontend"
        exit 1
    fi
else
    log "‚úÖ Frontend –æ–±—Ä–∞–∑ —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç"
fi

log "üöÄ –ó–∞–ø—É—Å–∫ frontend –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞..."
docker run -d --name wild-frontend -p 3000:3000 \
  -e REACT_APP_API_URL=http://93.127.214.183:8000 \
  wild-frontend

log "‚è≥ –û–∂–∏–¥–∞–Ω–∏–µ –∑–∞–ø—É—Å–∫–∞ frontend (45 —Å–µ–∫)..."
sleep 45

log "üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ –≤—Å–µ—Ö –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤..."
docker ps --format "table {{.Names}}\t{{.Status}}\t{{.Ports}}"

log "üìã –õ–æ–≥–∏ frontend..."
docker logs wild-frontend --tail 15

log "üîç –¢–µ—Å—Ç frontend..."
curl -s http://93.127.214.183:3000 | head -n 10 || echo "Frontend —Ç–µ—Å—Ç–∏—Ä—É–µ—Ç—Å—è..."

log "üîç –¢–µ—Å—Ç backend..."
curl -s http://93.127.214.183:8000/health | jq . 2>/dev/null || curl -s http://93.127.214.183:8000/health

log "‚úÖ FRONTEND –ò–°–ü–†–ê–í–õ–ï–ù –ò –ó–ê–ü–£–©–ï–ù!"
log ""
log "üåê –û—Ç–∫—Ä–æ–π—Ç–µ: http://93.127.214.183:3000"
log "üìß –¢–µ—Å—Ç–æ–≤—ã–π –ª–æ–≥–∏–Ω: test@example.com"
log "üîë –¢–µ—Å—Ç–æ–≤—ã–π –ø–∞—Ä–æ–ª—å: password123"
log ""
log "üéØ –ß—Ç–æ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–æ:"
log "   ‚úÖ Frontend –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä –∑–∞–ø—É—â–µ–Ω"
log "   ‚úÖ –ü—Ä–æ—Å—Ç–æ–µ React –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ —Å –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–µ–π"
log "   ‚úÖ –°–≤—è–∑—å —Å backend API"
log "   ‚úÖ –°–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–π –¥–∏–∑–∞–π–Ω"
log "   ‚úÖ –ö–Ω–æ–ø–∫–∞ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è backend"

log "üìä –§–ò–ù–ê–õ–¨–ù–´–ô –°–¢–ê–¢–£–°..."
docker ps --format "table {{.Names}}\t{{.Status}}\t{{.Ports}}" 