#!/usr/bin/env python3
"""
üéØ –î–ï–ú–û–ù–°–¢–†–ê–¶–ò–Ø –†–ê–°–®–ò–†–ï–ù–ù–û–ì–û –ê–ù–ê–õ–ò–ó–ê –¢–û–í–ê–†–ê
–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Ä–∞–±–æ—Ç—É –Ω–æ–≤–æ–≥–æ endpoint —Å —Ä–µ–∞–ª—å–Ω—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏ MPStats
"""

import requests
import json
from datetime import datetime, timedelta

def test_advanced_analysis():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –Ω–æ–≤—ã–π endpoint —Ä–∞—Å—à–∏—Ä–µ–Ω–Ω–æ–≥–æ –∞–Ω–∞–ª–∏–∑–∞"""
    
    print("üöÄ –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –†–ê–°–®–ò–†–ï–ù–ù–û–ì–û –ê–ù–ê–õ–ò–ó–ê –¢–û–í–ê–†–ê")
    print("=" * 60)
    
    # –ü–∞—Ä–∞–º–µ—Ç—Ä—ã –∑–∞–ø—Ä–æ—Å–∞
    url = "http://localhost:8000/mpstats/advanced-analysis"
    payload = {
        "article": "446467818",
        "date_from": "2023-10-27",
        "date_to": "2023-11-25", 
        "fbs": 1
    }
    
    print(f"üì° –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞–ø—Ä–æ—Å: {url}")
    print(f"üìä –ü–∞—Ä–∞–º–µ—Ç—Ä—ã: {payload}")
    print()
    
    try:
        response = requests.post(url, json=payload, timeout=30)
        print(f"üìà –°—Ç–∞—Ç—É—Å –æ—Ç–≤–µ—Ç–∞: {response.status_code}")
        
        if response.status_code == 200:
            data = response.json()
            
            print("‚úÖ –î–ê–ù–ù–´–ï –ü–û–õ–£–ß–ï–ù–´ –£–°–ü–ï–®–ù–û!")
            print("=" * 40)
            
            # –û—Å–Ω–æ–≤–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è
            basic = data.get('basic_info', {})
            print(f"üì¶ –û–°–ù–û–í–ù–ê–Ø –ò–ù–§–û–†–ú–ê–¶–ò–Ø:")
            print(f"   –ù–∞–∑–≤–∞–Ω–∏–µ: {basic.get('name', 'N/A')}")
            print(f"   –ë—Ä–µ–Ω–¥: {basic.get('brand', 'N/A')}")
            print(f"   –ü—Ä–æ–¥–∞–≤–µ—Ü: {basic.get('seller', 'N/A')}")
            print(f"   ID —Ç–æ–≤–∞—Ä–∞: {basic.get('itemid', 'N/A')}")
            print(f"   –ö–∞—Ç–µ–≥–æ—Ä–∏—è: {basic.get('subject', 'N/A')}")
            print()
            
            # –¶–µ–Ω–æ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ
            pricing = data.get('pricing', {})
            print(f"üí∞ –¶–ï–ù–û–û–ë–†–ê–ó–û–í–ê–ù–ò–ï:")
            print(f"   –ê–∫—Ç—É–∞–ª—å–Ω–∞—è —Ü–µ–Ω–∞: {pricing.get('final_price', 0):,} —Ä—É–±")
            print(f"   –ë–∞–∑–æ–≤–∞—è —Ü–µ–Ω–∞: {pricing.get('basic_price', 0):,} —Ä—É–±")
            print(f"   –°—Ç–∞—Ä—Ç–æ–≤–∞—è —Ü–µ–Ω–∞: {pricing.get('start_price', 0):,} —Ä—É–±")
            print(f"   –ë–∞–∑–æ–≤–∞—è —Å–∫–∏–¥–∫–∞: {pricing.get('basic_sale', 0)}%")
            print(f"   –ü—Ä–æ–º–æ —Å–∫–∏–¥–∫–∞: {pricing.get('promo_sale', 0)}%")
            print()
            
            # –ü—Ä–æ–¥–∞–∂–∏
            sales = data.get('sales_metrics', {})
            print(f"üìà –ü–û–ö–ê–ó–ê–¢–ï–õ–ò –ü–†–û–î–ê–ñ:")
            print(f"   –ü—Ä–æ–¥–∞–∂ –∑–∞ –ø–µ—Ä–∏–æ–¥: {sales.get('sales', 0):,}")
            print(f"   –°—Ä–µ–¥–Ω–µ–µ –≤ –¥–µ–Ω—å: {sales.get('sales_per_day_average', 0):.2f}")
            print(f"   –û–±—â–∞—è –≤—ã—Ä—É—á–∫–∞: {sales.get('revenue', 0):,} —Ä—É–±")
            print(f"   –°—Ä–µ–¥–Ω—è—è –≤—ã—Ä—É—á–∫–∞/–¥–µ–Ω—å: {sales.get('revenue_average', 0):,} —Ä—É–±")
            print(f"   –ü—Ä–æ—Ü–µ–Ω—Ç –≤—ã–∫—É–ø–∞: {sales.get('purchase', 0)}%")
            print(f"   –û–±–æ—Ä–∞—á–∏–≤–∞–µ–º–æ—Å—Ç—å: {sales.get('turnover_days', 0)} –¥–Ω–µ–π")
            print()
            
            # –†–µ–π—Ç–∏–Ω–≥
            rating = data.get('rating_reviews', {})
            print(f"‚≠ê –†–ï–ô–¢–ò–ù–ì –ò –û–¢–ó–´–í–´:")
            print(f"   –†–µ–π—Ç–∏–Ω–≥: {rating.get('rating', 0)}")
            print(f"   –ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤: {rating.get('comments', 0):,}")
            print(f"   –§–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π: {rating.get('picscount', 0)}")
            print(f"   3D —Ñ–æ—Ç–æ: {'‚úÖ' if rating.get('has3d') else '‚ùå'}")
            print(f"   –í–∏–¥–µ–æ: {'‚úÖ' if rating.get('hasvideo') else '‚ùå'}")
            print(f"   –ü–æ—Å–ª–µ–¥–Ω–∏–π —Ä–µ–π—Ç–∏–Ω–≥: {rating.get('avg_latest_rating', 0):.2f}")
            print()
            
            # –ó–∞–ø–∞—Å—ã
            inventory = data.get('inventory', {})
            print(f"üì¶ –ó–ê–ü–ê–°–´ –ò –û–°–¢–ê–¢–ö–ò:")
            print(f"   –û–±—â–∏–π –æ—Å—Ç–∞—Ç–æ–∫: {inventory.get('balance', 0):,}")
            print(f"   FBS –æ—Å—Ç–∞—Ç–æ–∫: {inventory.get('balance_fbs', 0):,}")
            print(f"   –î–Ω–µ–π –≤ –Ω–∞–ª–∏—á–∏–∏: {inventory.get('days_in_stock', 0)}")
            print(f"   –î–Ω–µ–π —Å –ø—Ä–æ–¥–∞–∂–∞–º–∏: {inventory.get('days_with_sales', 0)}")
            print(f"   FBS –∞–∫—Ç–∏–≤–µ–Ω: {'‚úÖ' if inventory.get('is_fbs') else '‚ùå'}")
            print()
            
            # –ì—Ä–∞—Ñ–∏–∫–∏
            charts = data.get('charts', {})
            print(f"üìä –î–ê–ù–ù–´–ï –î–õ–Ø –ì–†–ê–§–ò–ö–û–í:")
            print(f"   –ì—Ä–∞—Ñ–∏–∫ –ø—Ä–æ–¥–∞–∂: {len(charts.get('sales_graph', []))} —Ç–æ—á–µ–∫")
            print(f"   –ì—Ä–∞—Ñ–∏–∫ –æ—Å—Ç–∞—Ç–∫–æ–≤: {len(charts.get('stocks_graph', []))} —Ç–æ—á–µ–∫")
            print(f"   –ì—Ä–∞—Ñ–∏–∫ —Ü–µ–Ω: {len(charts.get('price_graph', []))} —Ç–æ—á–µ–∫")
            print(f"   –ì—Ä–∞—Ñ–∏–∫ –≤–∏–¥–∏–º–æ—Å—Ç–∏: {len(charts.get('product_visibility_graph', []))} —Ç–æ—á–µ–∫")
            print()
            
            # –û—Ç–ª–∞–¥–∫–∞
            debug = data.get('debug_info', {})
            print(f"üîç –ò–ù–§–û–†–ú–ê–¶–ò–Ø –û–ë –ê–ù–ê–õ–ò–ó–ï:")
            print(f"   Target item ID: {debug.get('target_itemid', 'N/A')}")
            print(f"   –ü–æ—Ö–æ–∂–∏—Ö —Ç–æ–≤–∞—Ä–æ–≤: {debug.get('similar_items_count', 0)}")
            print(f"   –í—Å–µ–≥–æ –≤ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏: {debug.get('total_similar', 0)}")
            
            completeness = debug.get('data_completeness', {})
            print(f"   –ü–æ–ª–Ω–æ—Ç–∞ –¥–∞–Ω–Ω—ã—Ö:")
            print(f"     - –û—Å–Ω–æ–≤–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è: {'‚úÖ' if completeness.get('has_basic_info') else '‚ùå'}")
            print(f"     - –¶–µ–Ω–æ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ: {'‚úÖ' if completeness.get('has_pricing') else '‚ùå'}")
            print(f"     - –ü—Ä–æ–¥–∞–∂–∏: {'‚úÖ' if completeness.get('has_sales') else '‚ùå'}")
            print(f"     - –ì—Ä–∞—Ñ–∏–∫–∏: {'‚úÖ' if completeness.get('has_charts') else '‚ùå'}")
            
            print()
            print("üéâ –†–ê–°–®–ò–†–ï–ù–ù–´–ô –ê–ù–ê–õ–ò–ó –†–ê–ë–û–¢–ê–ï–¢ –û–¢–õ–ò–ß–ù–û!")
            print("   ‚úÖ –†–µ–∞–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –∏–∑ MPStats API")
            print("   ‚úÖ –í—Å–µ —Å–µ–∫—Ü–∏–∏ –∑–∞–ø–æ–ª–Ω–µ–Ω—ã")
            print("   ‚úÖ –ì–æ—Ç–æ–≤–æ –∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é")
            
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞: {response.status_code}")
            print(f"–û—Ç–≤–µ—Ç: {response.text}")
            
    except Exception as e:
        print(f"‚ùå –ò—Å–∫–ª—é—á–µ–Ω–∏–µ: {e}")

if __name__ == "__main__":
    test_advanced_analysis() 